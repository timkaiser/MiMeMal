/* HEADER:
 * This compute shader takes a image containg the outlines for different components and projects the onto the texture of a object.
 */

#pragma kernel projectOutline

Texture2D<float2> UV;			// Input: UV image of the scene (see sc_UVCamera)
Texture2D<float4> Outline;		// Input: Image with marked otulines

RWTexture2D<float4> Result;		// Output

[numthreads(8, 8, 1)]
void projectOutline(uint3 id : SV_DispatchThreadID)
{
	// Get size of the UV image
	uint2 uv_size;
	UV.GetDimensions(uv_size.x, uv_size.y);

	// Get size of the outline image
	uint2 outline_size;
	Outline.GetDimensions(outline_size.x, outline_size.y);

	//Get size of the result image
	uint2 result_size;
	Result.GetDimensions(result_size.x, result_size.y);

	// Project outline to texture coordinates
	if (UV[id.xy].x != 0 && UV[id.xy].y != 0) {
		Result[UV[id.xy].xy*result_size] = Outline[int2(id.x*(float)outline_size.x/uv_size.x, id.y*(float)outline_size.y / uv_size.y)];
	}
}
